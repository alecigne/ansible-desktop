---
- name: Ensure github.com is a known host
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t ed25519 github.com') }}"
    regexp: "^github\\.com"

- name: Clone dotfiles
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_dir }}"
    update: no
    # Do not init submodules - some of them can be unreachable (local network)
    recursive: no

- name: Init/update submodules from Github
  command: chdir="{{ dotfiles_dir }}" git submodule update --init -- emacs/.emacs.d stumpwm/.stumpwm.d
  register: update_github_submodules
  changed_when: update_github_submodules.stdout != ""

# TODO Check if Raspberry Pi is available on local network
#- name: Add Raspberry Pi to known hosts
#  known_hosts:
#    name: "192.168.1.30"
#    key: "{{ lookup('pipe', 'ssh-keyscan 192.168.1.30') }}"
#
#- name: Check if the pass repository exists on my local network
#  command: git ls-remote -h {{ pass_repo }} &> /dev/null
#  register: check_pass_repo
#  ignore_errors: yes
#  changed_when: false

- name: Init/update submodules from network
  command: chdir="{{ dotfiles_dir }}" git submodule update --init -- password-store/.password-store
  register: update_network_submodules
  changed_when: update_network_submodules.stdout != ""

# TODO Import my GPG key from controller to host (local_action ?), only if executed from a controller.
- name: Stow configurations
  expect:
    chdir: "{{ dotfiles_dir }}"
    command: bash stow.bash
    responses:
      (?i)passphrase: "{{ gpg_passphrase }}"
  register: stow_result
  changed_when: stow_result.stdout != ""

- name: Apply correct permissions to .gnupg dirs (700)
  command: find {{ ansible_env.HOME }}/.gnupg -type d -exec chmod -c 700 {} \;
  register: chmod_result
  changed_when: chmod_result.stdout != ""

- name: Apply correct permissions to .gnupg files (600)
  command: find -L {{ ansible_env.HOME }}/.gnupg -type f -exec chmod -c 600 {} \;
  register: chmod_result
  changed_when: chmod_result.stdout != ""

# TODO Doesn't work - understand why
# - name: Apply correct permissions to .gnupg
#   file:
#     path: "{{ ansible_env.HOME }}/etc/dotfiles/gnupg/.gnupg"
#     state: directory
#     recurse: yes
#     mode: u=rw-x+X,g=-rwx,o=-rwx
