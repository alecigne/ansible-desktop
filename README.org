#+TITLE: Ansible Desktop

This repository aims at automating the setup of my Debian workstations
using [[https://www.ansible.com/][Ansible]].

This repo works in combination with my [[https://github.com/alecigne/my-utils][utils]] (my own small
housekeeping programs) and my [[https://github.com/alecigne/dotfiles][dotfiles]] (config files for the programs
I use).

* Procedure

This short documentation acts as a personal reminder :)

** Basic Debian installation
:PROPERTIES:
:CREATED:  [2021-08-19 Thu 19:14]
:END:

*Note*: the Debian installation itself can be automated using
[[https://www.debian.org/releases/stable/amd64/apb.en.html][preseeding]]. My experimental preseed configuration can be found on the
=preseed= branch [[https://github.com/alecigne/ansible-desktop/blob/preseed/debian_preseed/preseed.cfg][here]].

1. Download a =netinst= ISO image from the [[https://www.debian.org/distrib/netinst][official website]].

2. Create a bootable USB drive:

   #+begin_src sh
     sudo dd if=[path_to_iso] of=[path_to_usb]
   #+end_src

   I usually use =lsblk= to know the path to the USB drive. *Be
   careful*, as choosing the wrong path might cause serious damage.

3. Install Debian. I usually set up an encrypted LVM and I install the
   standard system utilities only (i.e., no desktop environment such
   as GNOME, and no X server - Ansible will install X and the i3
   window manager).

** System config and running the bootstrapping script
:PROPERTIES:
:CREATED:  [2021-08-19 Thu 19:15]
:END:

1. [as root] Install =sudo= and =gpg=. Add the user to the =sudo=
   group:

   #+begin_src sh
     usermod -aG sudo [user]
   #+end_src

   Log off and in again to take this change into account.

2. Generate a SSH key pair:

   #+begin_src sh
     ssh-keygen -t ed25519 -C "email@example.com"
   #+end_src

   Update the SSH agent:

   #+begin_src sh
     eval $(ssh-agent -s)
     ssh-add
   #+end_src

   Add the public key to Github for the new workstation so Ansible can
   clone my repos using SSH.

3. Import my GnuPG keys to decrypt sensible data.

   #+begin_src sh
     gpg --import private.key
   #+end_src

4. Call the bootstrapping script:

   #+begin_src sh
     wget -qO - https://raw.githubusercontent.com/alecigne/ansible-desktop/develop/bootstrap.bash | bash
   #+end_src

   The bootstrapping script will install Git and Ansible then use
   Ansible to switch from Debian stable to Debian testing. It will use
   the up-to-date version of Ansible to continue the installation.

* Tasks

- [X] Pull dotfiles submodules. The new workstation must register
  itself to Github (SSH key) or a SSH keypair must be created
  beforehand as a manual step.

- [X] Do not re-execute Stow every time

- [X] Reduce manual steps to a minimum

- [X] Switch from tasks to roles

- [ ] Customize the Debian installation. Interesting links:

  + [[https://www.debian.org/releases/buster/amd64/apb.en.html][Preseeding]]
  + [[https://wiki.debian.org/DebianCustomCD][Building a Custom Debian CD Set]]
  + [[https://wiki.debian.org/Simple-CDD][=simple-cdd=]]

- Packages to add:

  + [ ] =veracrypt= \\
    Check [[https://github.com/rodrigorega/ansible-role-VeraCrypt/blob/master/tasks/main.yml][this]].
  + [ ] =signal-desktop=

- [ ] Study the difference between =import= and =include= and act
  accordingly

- [ ] Read about Molecule

- [ ] Deploy Firefox with extensions
  + https://support.mozilla.org/en-US/kb/deploying-firefox-with-extensions
  + https://github.com/alzadude/ansible-firefox-addon
